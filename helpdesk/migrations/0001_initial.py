# Generated by Django 4.1.5 on 2023-03-28 08:40

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('avatar', models.ImageField(default='avatar.svg', null=True, upload_to='')),
                ('first_name', models.CharField(max_length=50)),
                ('other_name', models.CharField(max_length=70)),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('biography', ckeditor.fields.RichTextField(blank=True, max_length=500, verbose_name='biography')),
                ('is_student', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('is_open', models.BooleanField(default=True)),
                ('is_in_progress', models.BooleanField(default=False)),
                ('is_resolved', models.BooleanField(default=False)),
                ('is_closed', models.BooleanField(default=False)),
                ('contributors', models.ManyToManyField(blank=True, related_name='contributors', to='helpdesk.customuser')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='helpdesk.customuser')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='helpdesk.subject')),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='helpdesk.department'),
        ),

        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=150)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('contributors', models.ManyToManyField(blank=True, related_name='comment_contributors', to='helpdesk.customuser')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helpdesk.ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helpdesk.customuser')),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
    ]
